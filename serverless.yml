custom:
  bundle: 
    linting: false
  REGION: ${env:REGION}
  STAGE: ${sls:stage} 
  IAM_PROFILE: ${env:YOUR_AWS_IAM_PROFILE}
  SERVICE_NAME: ${env:PREFIX}${env:SERVICE_NAME}
  DYNAMO_DB_TABLE: ${env:PREFIX}${env:DYNAMO_DB_TABLE}-${self:custom.STAGE}
  COGNITO_POOL: ${env:PREFIX}${env:COGNITO_POOL}-${self:custom.STAGE}
  S3_BUCKET: ${env:PREFIX}${env:S3_BUCKET}-${self:custom.STAGE}


service: ${self:custom.SERVICE_NAME}
useDotenv: true
frameworkVersion: '3'

plugins:
  - serverless-bundle 

provider:
  stage: ${self:custom.STAGE}
  name: aws
  region: ${self:custom.REGION}
  profile: ${self:custom.IAM_PROFILE}
  runtime: nodejs18.x
  # Exposed Env variables
  environment:
    PHOTOS_TABLE_NAME: ${self:custom.DYNAMO_DB_TABLE}
    REGION: ${self:custom.REGION}
    S3_BUCKET: ${self:custom.S3_BUCKET}

  # IAM Access
  iamRoleStatements:
    - ${file(yaml/Dynamo_IAM.yml):Dynamo_IAM}
    - ${file(yaml/S3_IAM.yml):S3_IAM}

# Our Resources that we want to use...
resources:
  Resources:
    DynamoDBTable: ${file(yaml/DynamoDB_Resource.yml):DynamoDB}
    CognitoUserPool: ${file(yaml/Cognito_Resource.yml):CognitoUserPool}
    CognitoUserPoolClient: ${file(yaml/Cognito_Resource.yml):CognitoUserPoolClient}
    S3Bucket: ${file(yaml/S3_Resource.yml):PhotosBucket} 

  # Lets print out our outputs ready for our frontend
  Outputs: 
    UserPoolId:
      Value:
        Ref: CognitoUserPool
      Export:
        Name: ${self:provider.stage}-${self:custom.SERVICE_NAME}-UserPoolId
    UserPoolClientId:
      Value:
        Ref: CognitoUserPoolClient
      Export:
        Name: ${self:provider.stage}-${self:custom.SERVICE_NAME}-UserPoolClientId
      
# Our functions...
functions:
  - ${file(yaml/Functions.yml)}